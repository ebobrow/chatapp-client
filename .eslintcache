[{"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/index.tsx":"1","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/App.tsx":"2","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/AuthContext.tsx":"3","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/constants.ts":"4","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Navbar.tsx":"5","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Router.tsx":"6","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Login.tsx":"7","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Home.tsx":"8","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/UserInfo.tsx":"9","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Signup.tsx":"10","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Profile.tsx":"11","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AuthError.tsx":"12","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AuthForm.tsx":"13","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useForm.ts":"14","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Chat.tsx":"15","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Conversation.tsx":"16","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/ConversationList.tsx":"17","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Chat.ts":"18","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Auth.ts":"19","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/ChatContext.tsx":"20","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/CreateChat.tsx":"21","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/SocketContext.tsx":"22","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/NotFound.tsx":"23","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Friends.tsx":"24","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Title.tsx":"25","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Friend.tsx":"26","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Friends.ts":"27","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AddFriend.tsx":"28","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/ProtectedRoutes.tsx":"29","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useMessages.ts":"30","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useParticipants.ts":"31","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useNotifications.ts":"32","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/api.ts":"33"},{"size":219,"mtime":1609099842115,"results":"34","hashOfConfig":"35"},{"size":1407,"mtime":1610760189620,"results":"36","hashOfConfig":"35"},{"size":2036,"mtime":1610770982068,"results":"37","hashOfConfig":"35"},{"size":176,"mtime":1609448666935,"results":"38","hashOfConfig":"35"},{"size":510,"mtime":1609609329974,"results":"39","hashOfConfig":"35"},{"size":832,"mtime":1609352920622,"results":"40","hashOfConfig":"35"},{"size":1761,"mtime":1610670400101,"results":"41","hashOfConfig":"35"},{"size":434,"mtime":1610670400100,"results":"42","hashOfConfig":"35"},{"size":1566,"mtime":1610670400090,"results":"43","hashOfConfig":"35"},{"size":1897,"mtime":1610670400103,"results":"44","hashOfConfig":"35"},{"size":2160,"mtime":1610670400102,"results":"45","hashOfConfig":"35"},{"size":725,"mtime":1609120011253,"results":"46","hashOfConfig":"35"},{"size":2324,"mtime":1610770981961,"results":"47","hashOfConfig":"35"},{"size":981,"mtime":1609099751204,"results":"48","hashOfConfig":"35"},{"size":1261,"mtime":1610769932978,"results":"49","hashOfConfig":"35"},{"size":4971,"mtime":1610770981984,"results":"50","hashOfConfig":"35"},{"size":4003,"mtime":1610770981984,"results":"51","hashOfConfig":"35"},{"size":2803,"mtime":1610331462770,"results":"52","hashOfConfig":"35"},{"size":1231,"mtime":1609717625626,"results":"53","hashOfConfig":"35"},{"size":614,"mtime":1609438942513,"results":"54","hashOfConfig":"35"},{"size":3491,"mtime":1610770981938,"results":"55","hashOfConfig":"35"},{"size":504,"mtime":1609268976361,"results":"56","hashOfConfig":"35"},{"size":360,"mtime":1609355853504,"results":"57","hashOfConfig":"35"},{"size":5188,"mtime":1610770981961,"results":"58","hashOfConfig":"35"},{"size":276,"mtime":1610672318438,"results":"59","hashOfConfig":"35"},{"size":1019,"mtime":1610770981914,"results":"60","hashOfConfig":"35"},{"size":508,"mtime":1609611824178,"results":"61","hashOfConfig":"35"},{"size":1935,"mtime":1610770981984,"results":"62","hashOfConfig":"35"},{"size":1159,"mtime":1610761497946,"results":"63","hashOfConfig":"35"},{"size":465,"mtime":1610770981913,"results":"64","hashOfConfig":"35"},{"size":480,"mtime":1610770981913,"results":"65","hashOfConfig":"35"},{"size":603,"mtime":1610770981913,"results":"66","hashOfConfig":"35"},{"size":320,"mtime":1610770974950,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"16nlc15",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/index.tsx",[],["136","137"],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/App.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/AuthContext.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/constants.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Navbar.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Router.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Login.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Home.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/UserInfo.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Signup.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Profile.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AuthError.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AuthForm.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useForm.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Chat.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Conversation.tsx",["138"],"import { TextField, Button } from '@material-ui/core';\nimport React, {\n  FormEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport { useAuthContext } from '../contexts/AuthContext';\nimport {\n  MessagesContainer,\n  MessageWrapper,\n  Message,\n  ChatWrapper,\n  TextNode,\n  FlexFiller\n} from './styled/Chat';\nimport { useChatContext } from '../contexts/ChatContext';\nimport { useSocketContext } from '../contexts/SocketContext';\nimport { postRequest } from '../api';\nimport { PRIMARY_COLOR, SECONDARY_COLOR } from '../constants';\nimport { useMessages } from '../hooks/useMessages';\nimport { useParticipants } from '../hooks/useParticipants';\nimport { useNotifications } from '../hooks/useNotifications';\n\ninterface Props {\n  w: string;\n}\n\nconst setRead = (username: string, chatId: string) => {\n  postRequest('/chat/setopen', {\n    username,\n    chatId\n  });\n};\n\nexport const Conversation: React.FC<Props> = ({ w }) => {\n  const { user } = useAuthContext();\n  const [form, setForm] = useState('');\n  const bottomRef = useRef<HTMLDivElement>(null);\n  const { chatId } = useChatContext();\n  const { socket } = useSocketContext();\n\n  const {\n    data: messagesData,\n    isLoading: messagesLoading,\n    refetch\n  } = useMessages(chatId);\n  const {\n    data: participantsData,\n    isLoading: participantsLoading\n  } = useParticipants(chatId);\n  const { refetch: refetchNotifications } = useNotifications(\n    user?.name,\n    user?.id\n  );\n\n  const scrollToBottom = useCallback(() => {\n    if (!bottomRef.current) return;\n    bottomRef.current.scrollIntoView({ behavior: 'smooth' });\n  }, []);\n\n  const setLastOpened = useCallback(() => {\n    console.log('fetching');\n\n    postRequest('/chat/setopen', {\n      username: user?.username,\n      chatId\n    });\n    refetchNotifications();\n  }, [user?.username, chatId, refetchNotifications]);\n\n  const sendChat = (e: FormEvent) => {\n    e.preventDefault();\n    scrollToBottom();\n    socket.emit('new-message', {\n      message: form,\n      sender: user!.username,\n      room: chatId\n    });\n    refetch();\n    setForm('');\n    setLastOpened();\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n    socket.on('message', () => {\n      scrollToBottom();\n      refetch();\n      setLastOpened();\n    });\n\n    return () => {\n      socket.off();\n    };\n  }, [socket, scrollToBottom, setLastOpened, refetch]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatId, scrollToBottom]);\n\n  return (\n    <ChatWrapper w={w}>\n      {messagesLoading || (participantsLoading && <h1>Loading...</h1>)}\n      {chatId ? (\n        <>\n          <FlexFiller />\n          <MessagesContainer>\n            {messagesData &&\n              messagesData.messages.map((message, index) => {\n                const isMine = message.sender === user?.username;\n                return (\n                  <MessageWrapper key={index} mymessage={isMine} row={index}>\n                    <Message key={index} mymessage={isMine} row={index}>\n                      <TextNode ismine={isMine} padding={true}>\n                        {message.message}\n                      </TextNode>\n                    </Message>\n                    <TextNode ismine={isMine} padding={false}>\n                      {isMine\n                        ? 'Me'\n                        : participantsData?.participants.find(\n                            p => p.username === message.sender\n                          )?.name}\n                      {!isMine && (\n                        <small\n                          style={{\n                            margin: '10px',\n                            color:\n                              participantsData?.participants\n                                ?.filter(p => p.username !== user?.username) // Is this part necessary?\n                                .findIndex(\n                                  p => p.username === message.sender\n                                ) || 2 % 2 === 0\n                                ? PRIMARY_COLOR\n                                : SECONDARY_COLOR\n                          }}>\n                          {message.sender}\n                        </small>\n                      )}\n                    </TextNode>\n                  </MessageWrapper>\n                );\n              })}\n          </MessagesContainer>\n\n          <form onSubmit={sendChat}>\n            <TextField\n              type=\"text\"\n              value={form}\n              onChange={e => {\n                setForm(e.target.value);\n              }}\n              style={{ margin: '5px', width: '80%' }}\n            />\n            <Button\n              disabled={form === ''}\n              variant=\"contained\"\n              type=\"submit\"\n              disableElevation\n              style={{ marginTop: '5px' }}>\n              Send\n            </Button>\n            <div ref={bottomRef} style={{ height: '10px' }} />\n          </form>\n        </>\n      ) : (\n        <h1>No chat selected</h1>\n      )}\n    </ChatWrapper>\n  );\n};\n","/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/ConversationList.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Chat.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Auth.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/ChatContext.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/CreateChat.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/contexts/SocketContext.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/NotFound.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/pages/Friends.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Title.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/Friend.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/styled/Friends.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/AddFriend.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/components/ProtectedRoutes.tsx",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useMessages.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useParticipants.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/hooks/useNotifications.ts",[],"/Users/elliotbobrow/Desktop/Code Projects/Chat App/client/src/api.ts",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":30,"column":7,"nodeType":"145","messageId":"146","endLine":30,"endColumn":14},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'setRead' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]